#
# 1. 利用封装和继承的特性完成如下操作：
# 	小学生：
# 		属性： 姓名 学号 年龄 性别
# 		行为： 学习 打架
# 	中学生：
# 		属性： 姓名 学号 年龄 性别
# 		行为： 学习 谈恋爱
# 	大学生：
# 		属性： 姓名 学号 年龄 性别
# 		行为： 学习 打游戏
#
# 	调用：
# 		创建小学生对象
# 			调用学习的方法
# 				打印内容为： xx 学习的内容为：语文 数学 英语
# 		创建中学生对象
# 			调用学习的方法
# 				打印内容为：xx 学习的内容为：语数外 生物化 史地政
# 		创建大学生对象
# 			调用学习的方法：
# 				打印内容为： 逃课中...


# 2.主人杨夫人 向客人 李小姐介绍自己家的宠物狗和宠物猫
# 		宠物狗：
# 			昵称是：贝贝
# 			年龄是：2
# 			性别：雌
# 			才艺: 会两条腿行走的才艺
# 		宠物猫
# 			昵称是：花花
# 			年龄是 1
# 			性别是：雄
# 			才艺: 会装死的才艺


# 3.
# 	学生类：姓名、年龄、学号、成绩
# 	班级类：班级名称、学生列表
# 		显示所有学生(方法)
# 		根据学号查找学生(方法)
# 		添加一个学生(方法)
# 		删除一个学生（学生对象、学号）(方法)
# 		根据学号升序排序(方法)
# 		根据成绩降序排序(方法)

# 提示:
#     class Student:
#         def __init__(self):
#             pass
#     class Class:
#         def __init__(self, name, stu_list):
#             self.name = name
#             self.stu_list = stu_list
#
#     c = Class('三年一班', [stu1, stu2, stu3, stu4, stu5])

