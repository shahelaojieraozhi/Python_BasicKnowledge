"""
死循环：
1、打印变量，变量还没有改变
2、while True：（相当于条件没改变）
        pass

"""

# i = 0
# while i <= 10:
#     i += 1
#     print(i, end=' ')
# print('打印完毕')
# # 1 2 3 4 5 6 7 8 9 10 11 打印完毕
#
# # 对比一下
# i = 0
# while i <= 10:
#     print(i, end=' ')
#     i += 1
# print('打印完毕')
# # 0 1 2 3 4 5 6 7 8 9 10 打印完毕

# 打印30以内的3的倍数
# # 方式一：
# i = 1
# while i <= 30:
#     # 进入循环体
#     if i % 3 == 0:
#         print(i, end=' ')
#     # 改变 i 的值
#     i += 1

# # 方式二：
# n = 3
# while n <= 30:
#     print(n)
#     n += 3

# 方式三：
# 这是那个傻逼说出的方法，删喽！

# # 打印30以内的即使3的倍数又是5的倍数：
# i = 1
# while i <= 30:
#     # 进入循环体
#     if i % 3 == 0 and i % 5 == 0:
#         print(i, end=' ')
#     # 改变 i 的值
#     i += 1

'''
使用while循环计算1-20的累加和
1+2+3+4.。。。+20
'''
# i = 1
# sum1 = 0
# while i <= 20:
#     sum1 = sum1 + i
#     i += 1
# print(sum1)

'''
打小星星

*       ——>第一层1颗*
**      ——>第二层2颗*
***     ——>第三层3颗*
****    ——>第四层4颗*
嵌套循环
分析：
1、层数明确
2、发现规律  层数与个数
3、用什么表示层数，用什么表示*的个数
'''

# # python里特有的：
# i = 1
# while i <= 5:
#     print('*' * i)
#     i += 1

# # 用嵌套  （'*'i 的底层）
# ceng = 1
# while ceng <= 5:
#     count = 1
#     while count <= ceng:
#         print('*', end='')
#         count += 1
#     ceng += 1
#     print()     # 换行

# 打印9*9的乘法表
'''
1*1 = 1
1*2 = 2  2*2 = 4
1*3 = 3  2*3 = 6  3*3 =9
....
1*9 = 9  2*9 = 18  ......
'''
# # 视频38
# CS = 1
# while 10 > CS:
#     CF = 1
#     while CF <= CS:
#         print('{}*{} = {}'.format(CF, CS, CS * CF), end=' ')
#         CF += 1
#     CS += 1
#     print()  # 换行
